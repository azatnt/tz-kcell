version: '3.7'

services:

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672


  contact:
    build:
      context: ./contact
      dockerfile: Dockerfile
    command: >
      sh -c "
             python ./contact/manage.py makemigrations &&
             python ./contact/manage.py migrate &&
             python ./contact/manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    #    networks:
    #      - proj
    volumes:
      - .:/contact
    restart: on-failure
    environment:
      - SECRET_KEY=devsecretkey
      - DEBUG=1
      - DB_HOST=postgres
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=password
    depends_on:
     - rabbitmq


  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    command: >
      sh -c "
             python ./auth/manage.py migrate &&
             python ./auth/manage.py runserver 0.0.0.0:8001"
    ports:
      - 8001:8001
    volumes:
      - .:/auth
    environment:
      - SECRET_KEY=devsecretkey
      - DEBUG=1
      - DB_HOST=postgres
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=password
    depends_on:
      - postgres


  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=password

